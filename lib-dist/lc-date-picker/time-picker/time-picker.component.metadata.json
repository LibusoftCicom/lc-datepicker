[{"__symbolic":"module","version":3,"metadata":{"LCTimePickerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"moduleId":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"module"},"member":"id"},"selector":"lc-time-picker","template":"\n    <table>\n        <thead align=\"center\"  [style.background]=\"config.PrimaryColor\">\n            <tr>\n            <th [attr.colspan]=\"is24HourFormat ? 5 : 6\">\n                <div class=\"resetBtn\"> &nbsp; </div>\n                <div class=\"resetBtn\" (click)=\"resetDate($event)\"> <i class=\"fa fa-home\" aria-hidden=\"true\"></i> </div>\n            </th></tr>\n        </thead>\n        <tbody align=\"center\" [style.color]=\"config.FontColor\">\n            <tr>\n            <td rowspan=\"3\"></td>\n            <td class=\"selectbtn\" (click)=\"addHour()\" (wheel)=\"hourScroll($event)\" >\n                <i class=\"fa fa-caret-up\" aria-hidden=\"true\" [style.color]=\"config.FontColor\"></i>\n            </td>\n            <td rowspan=\"3\" class=\"divider\">:</td>\n            <td class=\"selectbtn\" (click)=\"addMinute()\" (wheel)=\"minuteScroll($event)\" [style.color]=\"config.FontColor\">\n                <i class=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\n            </td>\n            <td class=\"selectbtn\" (click)=\"toggleMeridiem($event)\" (wheel)=\"toggleMeridiem($event)\" *ngIf=\"!is24HourFormat\" [style.color]=\"config.FontColor\">\n                <i class=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\n            </td>\n            <td rowspan=\"3\"></td>\n            </tr>\n            <tr>\n            <td class=\"timeDigit\" (wheel)=\"hourScroll($event)\">{{is24HourFormat ? newDate.format('HH') : newDate.format('hh')}}</td>\n            <td class=\"timeDigit\" (wheel)=\"minuteScroll($event)\">{{newDate.format('mm')}}</td>\n            <td class=\"timeDigit\" (wheel)=\"toggleMeridiem($event)\" *ngIf=\"!is24HourFormat\">{{newDate.format('A')}}</td>\n            </tr>\n            <tr>\n            <td class=\"selectbtn\" (click)=\"subtractHour()\" (wheel)=\"hourScroll($event)\" [style.color]=\"config.FontColor\">\n                <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n            </td>\n            <td class=\"selectbtn\" (click)=\"subtractMinute()\" (wheel)=\"minuteScroll($event)\" [style.color]=\"config.FontColor\">\n                <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n            </td>\n            <td class=\"selectbtn\" (click)=\"toggleMeridiem($event)\" (wheel)=\"toggleMeridiem($event)\" *ngIf=\"!is24HourFormat\" [style.color]=\"config.FontColor\">\n                <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                </td>\n            </tr>\n        </tbody>\n        </table>\n","styles":["button,table{border:0;-webkit-box-sizing:border-box;box-sizing:border-box}button{background:0 0;cursor:pointer;display:inline-block;line-height:14px;text-align:center;outline:0;width:29px;height:100%}td{padding:1px}table{width:220px;height:100px;border-collapse:collapse;overflow:hidden;font-size:large}.dateTimeToggle{width:220px;height:20px;background:#e4e4e4;position:absolute;bottom:20px;border-top:1px solid #e4e4e4}.dateTimeToggle button{width:50%;height:100%;float:left;background:0 0}.dateTimeToggle button.active,table{background:#fff}.dateTimeToggle :first-child button{border-right:1px solid #efefef}.confirmDate{width:220px;height:20px;background:#efefef}.confirmDate button{width:100%;height:100%;border-top:1px solid #efefef}thead tr{color:#f0f8ff}thead tr,tr.days{height:25px}tr.days td{border:0}td.active{background:rgba(94,102,111,.05)}.resetBtn{cursor:pointer;color:#e0e0e0;float:left;width:30px;font-size:initial}.selectbtn{cursor:pointer;color:#5e666f;width:20px;font-size:xx-large}.pullRight{float:right}.rotateUp{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.rotateDown{-webkit-transform:rotate(-90deg) scaleX(-1);transform:rotate(-90deg) scaleX(-1)}.divider{width:10px;font-size:xx-large}.timeDigit{width:75px;font-size:larger}"],"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy"},"member":"OnPush"}}]}],"members":{"newDate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"reset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"setTimeFormat":[{"__symbolic":"method"}],"addHour":[{"__symbolic":"method"}],"subtractHour":[{"__symbolic":"method"}],"addMinute":[{"__symbolic":"method"}],"subtractMinute":[{"__symbolic":"method"}],"hourScroll":[{"__symbolic":"method"}],"minuteScroll":[{"__symbolic":"method"}],"toggleMeridiem":[{"__symbolic":"method"}],"preventDefault":[{"__symbolic":"method"}],"stopPropagation":[{"__symbolic":"method"}],"resetDate":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"LCTimePickerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"moduleId":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"module"},"member":"id"},"selector":"lc-time-picker","template":"\n    <table>\n        <thead align=\"center\"  [style.background]=\"config.PrimaryColor\">\n            <tr>\n            <th [attr.colspan]=\"is24HourFormat ? 5 : 6\">\n                <div class=\"resetBtn\"> &nbsp; </div>\n                <div class=\"resetBtn\" (click)=\"resetDate($event)\"> <i class=\"fa fa-home\" aria-hidden=\"true\"></i> </div>\n            </th></tr>\n        </thead>\n        <tbody align=\"center\" [style.color]=\"config.FontColor\">\n            <tr>\n            <td rowspan=\"3\"></td>\n            <td class=\"selectbtn\" (click)=\"addHour()\" (wheel)=\"hourScroll($event)\" >\n                <i class=\"fa fa-caret-up\" aria-hidden=\"true\" [style.color]=\"config.FontColor\"></i>\n            </td>\n            <td rowspan=\"3\" class=\"divider\">:</td>\n            <td class=\"selectbtn\" (click)=\"addMinute()\" (wheel)=\"minuteScroll($event)\" [style.color]=\"config.FontColor\">\n                <i class=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\n            </td>\n            <td class=\"selectbtn\" (click)=\"toggleMeridiem($event)\" (wheel)=\"toggleMeridiem($event)\" *ngIf=\"!is24HourFormat\" [style.color]=\"config.FontColor\">\n                <i class=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\n            </td>\n            <td rowspan=\"3\"></td>\n            </tr>\n            <tr>\n            <td class=\"timeDigit\" (wheel)=\"hourScroll($event)\">{{is24HourFormat ? newDate.format('HH') : newDate.format('hh')}}</td>\n            <td class=\"timeDigit\" (wheel)=\"minuteScroll($event)\">{{newDate.format('mm')}}</td>\n            <td class=\"timeDigit\" (wheel)=\"toggleMeridiem($event)\" *ngIf=\"!is24HourFormat\">{{newDate.format('A')}}</td>\n            </tr>\n            <tr>\n            <td class=\"selectbtn\" (click)=\"subtractHour()\" (wheel)=\"hourScroll($event)\" [style.color]=\"config.FontColor\">\n                <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n            </td>\n            <td class=\"selectbtn\" (click)=\"subtractMinute()\" (wheel)=\"minuteScroll($event)\" [style.color]=\"config.FontColor\">\n                <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n            </td>\n            <td class=\"selectbtn\" (click)=\"toggleMeridiem($event)\" (wheel)=\"toggleMeridiem($event)\" *ngIf=\"!is24HourFormat\" [style.color]=\"config.FontColor\">\n                <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                </td>\n            </tr>\n        </tbody>\n        </table>\n","styles":["button,table{border:0;-webkit-box-sizing:border-box;box-sizing:border-box}button{background:0 0;cursor:pointer;display:inline-block;line-height:14px;text-align:center;outline:0;width:29px;height:100%}td{padding:1px}table{width:220px;height:100px;border-collapse:collapse;overflow:hidden;font-size:large}.dateTimeToggle{width:220px;height:20px;background:#e4e4e4;position:absolute;bottom:20px;border-top:1px solid #e4e4e4}.dateTimeToggle button{width:50%;height:100%;float:left;background:0 0}.dateTimeToggle button.active,table{background:#fff}.dateTimeToggle :first-child button{border-right:1px solid #efefef}.confirmDate{width:220px;height:20px;background:#efefef}.confirmDate button{width:100%;height:100%;border-top:1px solid #efefef}thead tr{color:#f0f8ff}thead tr,tr.days{height:25px}tr.days td{border:0}td.active{background:rgba(94,102,111,.05)}.resetBtn{cursor:pointer;color:#e0e0e0;float:left;width:30px;font-size:initial}.selectbtn{cursor:pointer;color:#5e666f;width:20px;font-size:xx-large}.pullRight{float:right}.rotateUp{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.rotateDown{-webkit-transform:rotate(-90deg) scaleX(-1);transform:rotate(-90deg) scaleX(-1)}.divider{width:10px;font-size:xx-large}.timeDigit{width:75px;font-size:larger}"],"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy"},"member":"OnPush"}}]}],"members":{"newDate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"reset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"setTimeFormat":[{"__symbolic":"method"}],"addHour":[{"__symbolic":"method"}],"subtractHour":[{"__symbolic":"method"}],"addMinute":[{"__symbolic":"method"}],"subtractMinute":[{"__symbolic":"method"}],"hourScroll":[{"__symbolic":"method"}],"minuteScroll":[{"__symbolic":"method"}],"toggleMeridiem":[{"__symbolic":"method"}],"preventDefault":[{"__symbolic":"method"}],"stopPropagation":[{"__symbolic":"method"}],"resetDate":[{"__symbolic":"method"}]}}}}]